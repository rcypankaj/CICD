name: React Native CI/CD
on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - LICENSE
      - docs/**
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      buildType:
        type: choice
        description: Build type to run
        options:
          - prod-apk
          - all
env:
  EXPO_TOKEN: "${{ secrets.EXPO_TOKEN }}"
  NODE_OPTIONS: "--openssl-legacy-provider"
  CREDENTIALS_JSON_BASE64: "${{ secrets.CREDENTIALS_JSON_BASE64 }}"
  KEYSTORE_BASE64: "${{ secrets.KEYSTORE_BASE64 }}"
jobs:
  check-skip:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Skip CI check
        run: echo "Proceeding with workflow"
  test:
    runs-on: ubuntu-latest
    steps:
      - name: 🏗️ Checkout repository
        uses: actions/checkout@v4
      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.16.0
          cache: yarn
      - name: 📦 Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: 🚫 Force fresh Yarn cache
        uses: actions/cache@v3
        with:
          path: "${{ steps.yarn-cache-dir-path.outputs.dir }}"
          key: "${{ runner.os }}-yarn-${{ github.run_id }}"
      - name: 📦 Install dependencies
        run: yarn install --frozen-lockfile
  build-and-deploy:
    needs: test
    if: >-
      (github.event_name == 'push' &&
      (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')) ||
      github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: 🏗️ Checkout repository
        uses: actions/checkout@v4

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.18.3
          cache: yarn
      - name: 📦 Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: 🚫 Force fresh Yarn cache
        uses: actions/cache@v3
        with:
          path: "${{ steps.yarn-cache-dir-path.outputs.dir }}"
          key: "${{ runner.os }}-yarn-${{ github.run_id }}"

      - name: 📦 Install dependencies
        run: |
          yarn install --frozen-lockfile
          yarn global add eas-cli@latest
          yarn expo install --check
      - name: 🔍 Debug alias + file presence
        run: |
          echo "🔧 Node version:"
          node -v

          echo "📁 Project structure:"
          find . -maxdepth 2 -type d | sort

          echo "🔎 Checking HapticTab presence:"
          find . -iname "*haptictab*" || echo "❌ HapticTab.tsx not found"

          echo "📄 babel.config.js:"
          cat babel.config.js || echo "❌ Not found"

          echo "📄 tsconfig.json:"
          cat tsconfig.json || echo "❌ Not found"

          echo "🔎 Grepping for '@/components/HapticTab'..."
          grep -r "@/components/HapticTab" ./app || echo "No matching import found"
      - name: 🔐 Decode keystore + credentials
        run: |
          echo "${CREDENTIALS_JSON_BASE64}" | base64 -d > credentials.json
          echo "${KEYSTORE_BASE64}" | base64 -d > keystore.jks
        env:
          CREDENTIALS_JSON_BASE64: ${{ secrets.CREDENTIALS_JSON_BASE64 }}
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      - name: 🚫 Force fresh EAS cache
        uses: actions/cache@v3
        with:
          path: ~/.eas-build-local
          key: "${{ runner.os }}-eas-${{ github.run_id }}"

      - name: 🔧 Verify EAS CLI
        run: eas --version
      - name: 🛠️ Build Production APK
        if: >-
          github.event.inputs.buildType == 'all' ||
          github.event.inputs.buildType == 'prod-apk' ||
          github.event_name == 'push'
        run: |
          export NODE_OPTIONS="--openssl-legacy-provider --max_old_space_size=4096"
          eas build --platform android --profile production-apk --local --non-interactive --output=./app-prod.apk --clear-cache
        env:
          NODE_ENV: production
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      - name: 📤 Upload APK to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: app-builds
          path: ./app-prod.apk
          retention-days: 7
